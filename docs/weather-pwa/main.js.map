{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/weather.service.ts","./src/app/weather-report/weather-report.component.ts","./src/app/weather-report/weather-report.component.html","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WeatherReportComponent } from './weather-report/weather-report.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WeatherReportComponent\n  },\n  {\n    path: ':locationName',\n    component: WeatherReportComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Subject, Observable } from 'rxjs';\nimport { takeUntil, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n\n  countries = [\n    {\n      name: 'Ukraine',\n      cities: ['Lviv', 'Kyiv', 'Skole']\n    },\n    {\n      name: 'Egypt',\n      cities: ['Cairo', 'Sharm el-Sheikh', 'Hurgada']\n    },\n    {\n      name: 'Turkey',\n      cities: ['Antalya', 'Manavgat', 'Alanya']\n    }\n  ];\n\n  countryControl: FormControl;\n  cityControl: FormControl;\n\n  cities$: Observable<string>;\n\n  constructor(private router: Router) { }\n\n  public ngOnInit(): void {\n    this.cityControl = new FormControl('');\n\n    this.cityControl.valueChanges\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(value => {\n        this.router.navigate([value]);\n      });\n\n    this.countryControl = new FormControl('');\n\n    this.cities$ = this.countryControl.valueChanges.pipe(\n      map(country => country.cities)\n    );\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  Angular Weather Progressive Web App\n</mat-toolbar>\n<div class=\"content\">\n  <div class=\"flex-row\">\n    <mat-form-field class=\"mr\">\n      <mat-label>Select country</mat-label>\n      <mat-select [formControl]=\"countryControl\">\n        <mat-option *ngFor=\"let country of countries\" [value]=\"country\">\n          {{country.name}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Select city</mat-label>\n      <mat-select [formControl]=\"cityControl\">\n        <mat-option *ngFor=\"let city of cities$ | async\" [value]=\"city\">\n          {{city}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <br />\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { WeatherReportComponent } from './weather-report/weather-report.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherReportComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatCardModule,\n    MatProgressBarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { EMPTY, Observable } from 'rxjs';\nimport { map, delay } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment.prod';\n\n@Injectable({ providedIn: 'root' })\nexport class WeatherService {\n  constructor(private http: HttpClient) { }\n\n  public getWeatherForCity(city: string): Observable<any> {\n\n    const path = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${environment.apiId}`;\n\n    return this.http.get<any>(path).pipe(\n      map(data => ({\n        ...data,\n        image: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\n      })),\n      delay(500)\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map, filter, concatMap, tap } from 'rxjs/operators';\n\nimport { WeatherService } from '../services/weather.service';\n\n@Component({\n  selector: 'app-weather-report',\n  templateUrl: './weather-report.component.html',\n  styleUrls: ['./weather-report.component.scss']\n})\nexport class WeatherReportComponent implements OnInit {\n  data$: Observable<any>;\n\n  today: Date = new Date();\n\n  loading = false;\n\n  constructor(\n    private weatherService: WeatherService,\n    private route: ActivatedRoute\n  ) { }\n\n  public ngOnInit(): void {\n    this.data$ = this.route.params.pipe(\n      map(params => params.locationName),\n      filter(name => !!name),\n      tap(() => {\n        this.loading = true;\n      }),\n      concatMap(name => this.weatherService.getWeatherForCity(name)),\n      tap(() => {\n        this.loading = false;\n      })\n    );\n  }\n}\n\n","<mat-card class=\"mat-elevation-z5\" *ngIf=\"data$ | async as data\">\n\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\" class=\"top-bar\"></mat-progress-bar>\n\n  <mat-card-header>\n    <mat-card-title>{{data.name}}'s weather</mat-card-title>\n    <mat-card-subtitle>Today: {{today | date }}</mat-card-subtitle>\n  </mat-card-header>\n\n  <mat-card-content>\n    <div class=\"flex-row\">\n      <div class=\"temp\">\n        <span class=\"big-text\">{{data.main.temp | number:'0.0-0'}} C</span>\n        <span>Feels like </span>\n        <span>{{data.main.feels_like | number: '0.0-0'}} C</span>\n      </div>\n\n      <div class=\"outlook\">\n        <img [src]=\"data.image\" class=\"image\" />\n        <span>{{data.weather[0].description | titlecase}}</span>\n      </div>\n    </div>\n  </mat-card-content>\n\n\n\n</mat-card>\n","export const environment = {\n  production: true,\n  apiId: '695ed9f29c4599b7544d0db5c211d499'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}